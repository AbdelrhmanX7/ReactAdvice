{"ast":null,"code":"import _asyncToGenerator from\"E:/Front-End-Challenges/React-Challenges/react-advice-generator/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"E:/Front-End-Challenges/React-Challenges/react-advice-generator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"E:\\\\Front-End-Challenges\\\\React-Challenges\\\\react-advice-generator\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import styles from\"./AdviceUI.module.css\";import patternDesktop from\"./pattern-divider-desktop.svg\";import icon_dice from\"./icon-dice.svg\";import{useState,useEffect}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var AdviceUI=function AdviceUI(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),AdviceMsg=_useState2[0],setAdviceMsg=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var AdviceApiFun=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var respones,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);_context.next=3;return fetch(\"https://api.adviceslip.com/advice\");case 3:respones=_context.sent;_context.next=6;return respones.json();case 6:data=_context.sent;setAdviceMsg(data.slip);setIsLoading(false);console.log(document.body.clientWidth);case 10:case\"end\":return _context.stop();}}},_callee);}));return function AdviceApiFun(){return _ref.apply(this,arguments);};}();useEffect(function(){AdviceApiFun();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.main,children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"ADVICE #\",AdviceMsg.id]}),/*#__PURE__*/_jsx(\"h2\",{children:/*#__PURE__*/_jsx(\"q\",{children:isLoading?'Loading...':AdviceMsg.advice})}),/*#__PURE__*/_jsx(\"img\",{src:patternDesktop,alt:\"Desktop-pattern\"}),/*#__PURE__*/_jsx(\"button\",{onClick:AdviceApiFun,className:styles.iconDice,children:/*#__PURE__*/_jsx(\"img\",{src:icon_dice,alt:\"icon-dice\"})})]});};export default AdviceUI;","map":{"version":3,"sources":["E:/Front-End-Challenges/React-Challenges/react-advice-generator/src/components/UI/AdviceUI.js"],"names":["styles","patternDesktop","icon_dice","useState","useEffect","AdviceUI","AdviceMsg","setAdviceMsg","isLoading","setIsLoading","AdviceApiFun","fetch","respones","json","data","slip","console","log","document","body","clientWidth","main","id","advice","iconDice"],"mappings":"0cAAA,MAAOA,CAAAA,MAAP,KAAmB,uBAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,C,wFACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,cAAkCF,QAAQ,CAAC,EAAD,CAA1C,wCAAOG,SAAP,eAAkBC,YAAlB,eACA,eAAkCJ,QAAQ,CAAC,IAAD,CAA1C,yCAAOK,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,YAAY,0FAAG,qJACnBD,YAAY,CAAC,IAAD,CAAZ,CADmB,sBAEIE,CAAAA,KAAK,CAAC,mCAAD,CAFT,QAEbC,QAFa,qCAGAA,CAAAA,QAAQ,CAACC,IAAT,EAHA,QAGbC,IAHa,eAInBP,YAAY,CAACO,IAAI,CAACC,IAAN,CAAZ,CACAN,YAAY,CAAC,KAAD,CAAZ,CACAO,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,IAAT,CAAcC,WAA1B,EANmB,uDAAH,kBAAZV,CAAAA,YAAY,0CAAlB,CAQAN,SAAS,CAAC,UAAM,CACdM,YAAY,GACb,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,aAAK,SAAS,CAAEV,MAAM,CAACqB,IAAvB,wBACE,gCAAYf,SAAS,CAACgB,EAAtB,GADF,cAEE,iCACE,mBAAId,SAAS,CAAG,YAAH,CAAkBF,SAAS,CAACiB,MAAzC,EADF,EAFF,cAKE,YAAK,GAAG,CAAEtB,cAAV,CAA0B,GAAG,CAAC,iBAA9B,EALF,cAME,eAAQ,OAAO,CAAES,YAAjB,CAA+B,SAAS,CAAEV,MAAM,CAACwB,QAAjD,uBACE,YAAK,GAAG,CAAEtB,SAAV,CAAqB,GAAG,CAAC,WAAzB,EADF,EANF,GADF,CAYD,CA3BD,CA6BA,cAAeG,CAAAA,QAAf","sourcesContent":["import styles from \"./AdviceUI.module.css\";\r\nimport patternDesktop from \"./pattern-divider-desktop.svg\";\r\nimport icon_dice from \"./icon-dice.svg\";\r\nimport { useState, useEffect } from \"react\";\r\nconst AdviceUI = () => {\r\n  const [AdviceMsg, setAdviceMsg] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const AdviceApiFun = async () => {\r\n    setIsLoading(true)\r\n    const respones = await fetch(\"https://api.adviceslip.com/advice\");\r\n    const data = await respones.json();\r\n    setAdviceMsg(data.slip);\r\n    setIsLoading(false)\r\n    console.log(document.body.clientWidth)\r\n  };\r\n  useEffect(() => {\r\n    AdviceApiFun();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <p>ADVICE #{AdviceMsg.id}</p>\r\n      <h2>\r\n        <q>{isLoading ? 'Loading...' : AdviceMsg.advice}</q>\r\n      </h2>\r\n      <img src={patternDesktop} alt=\"Desktop-pattern\" />\r\n      <button onClick={AdviceApiFun} className={styles.iconDice}>\r\n        <img src={icon_dice} alt=\"icon-dice\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdviceUI;\r\n"]},"metadata":{},"sourceType":"module"}